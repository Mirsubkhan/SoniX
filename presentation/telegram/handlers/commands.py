from aiogram.types import Message
from aiogram import Router
from aiogram.filters import CommandStart, Command

router = Router()

@router.message(CommandStart())
async def start_message(message: Message):
    await message.answer(
        text=(
            "<b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! ü§ù</b>\n\n"
            "–Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —É–º–µ–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –º—É–ª—å—Ç–∏–º–µ–¥–∏–π–Ω—ã–µ —Ñ–∞–π–ª—ã üòé "
            "<b>–ë–æ–ª—å—à–µ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π –ø–æ –∫–æ–º–∞–Ω–¥–µ /help</b>\n<i>P.S. <span class='tg-spoiler'>–¢–æ–∫ –Ω–µ –ª–µ–Ω–∏—Å—å –ø–∂ üòä</span></i>"
        ),
        parse_mode="HTML"
    )

@router.message(Command(commands="help"))
async def help_message(message: Message):
    await message.answer(
        text=(
            "<b>–í–æ—Ç –æ–Ω! –ß–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–π —Ä–µ—à–∏–ª –≤—Å—ë —Ç–∞–∫–∏ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞ üòè</b>\n\n"
            "<blockquote><b>–ß—Ç–æ —è —É–º–µ—é? ü§î</b></blockquote>\n"
            "1. –ò–∑–≤–ª–µ–∫–∞—Ç—å —Ç–µ–∫—Å—Ç –∏–∑ –∞—É–¥–∏–æ, –≤–∏–¥–µ–æ, –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –≤–∏–¥–µ–æ –∫—Ä—É–∂–∫–æ–≤;\n"
            "2. –†–∞–∑–¥–µ–ª—è—Ç—å –º—É–∑—ã–∫—É –Ω–∞ –≤–æ–∫–∞–ª –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–ª (–º–∏–Ω—Å—É—Å–æ–≤–∫–∞);\n"
            "3. –£–¥–∞–ª—è—Ç—å —Ñ–æ–Ω –∏–∑ —Ñ–æ—Ç–æ;\n"
            "4. –£–¥–∞–ª—è—Ç—å —à—É–º –∏–∑ –∞—É–¥–∏–æ;\n"
            "5. –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ –∏ —Ñ–æ—Ç–æ –≤ ASCII –∞—Ä—Ç\n\n"
            "<blockquote><b>–ö–∞–∫–∏–µ —Ñ–∞–π–ª—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è? ü§î</b></blockquote>\n"
            "–Ø –ø—Ä–∏–Ω–∏–º–∞—é —Ç–æ–ª—å–∫–æ: <b>–∞—É–¥–∏–æ, –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –≤–∏–¥–µ–æ, –≤–∏–¥–µ–æ-–∫—Ä—É–∂–∫–∏ –∏ —Ñ–æ—Ç–æ.</b>\n\n"
            "<b>–í–æ—Ç –≤–∏–¥–∏—à—å –∫–∞–∫ –ø—Ä–æ—Å—Ç–æ? –ê —Ç—ã –Ω–µ —Ö–æ—Ç–µ–ª —á–∏—Ç–∞—Ç—å üòâ</b>"
        ),
        parse_mode="HTML"
    )